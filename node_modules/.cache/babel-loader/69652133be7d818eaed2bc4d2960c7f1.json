{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASHISH KUMAR\\\\Documents\\\\React\\\\http-food\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setmeals] = useState([]);\n  const [IsLoading, setIsLoading] = useState(true);\n  const [httpError, sethttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://http-firebase-15e34-default-rtdb.firebaseio.com/meals');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          discription: responseData[key].discription,\n          price: responseData[key].price\n        });\n      }\n\n      setmeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      sethttpError(error.message);\n    });\n  }, []);\n\n  if (IsLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"2cxt5ku1/TYxaKVXChZF3iXRp9Q=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["C:/Users/ASHISH KUMAR/Documents/React/http-food/src/components/Meals/AvailableMeals.js"],"names":["useEffect","useState","Card","MealItem","classes","AvailableMeals","meals","setmeals","IsLoading","setIsLoading","httpError","sethttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","discription","price","catch","error","message","MealLoading","MealsError","mealsList","map","meal","description"],"mappings":";;;AAAA,SAAQA,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;;;AAIA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBN,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACO,SAAD,EAAWC,YAAX,IAAyBR,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAM,CAACS,SAAD,EAAWC,YAAX,IAAyBV,QAAQ,EAAvC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMY,UAAU,GAAC,YAAS;AAC1B,YAAMC,QAAQ,GAAC,MAAMC,KAAK,CAAC,+DAAD,CAA1B;;AAEA,UAAG,CAACD,QAAQ,CAACE,EAAb,EACA;AACE,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AACD,YAAMC,YAAY,GAAC,MAAMJ,QAAQ,CAACK,IAAT,EAAzB;AAEA,YAAMC,WAAW,GAAC,EAAlB;;AACA,WAAI,MAAMC,GAAV,IAAiBH,YAAjB,EAA8B;AAC5BE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAACF,GADY;AAEfG,UAAAA,IAAI,EAACN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFR;AAGfC,UAAAA,WAAW,EAACP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHf;AAIfC,UAAAA,KAAK,EAACR,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJT,SAAjB;AAMD;;AACDlB,MAAAA,QAAQ,CAACY,WAAD,CAAR;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACC,KApBD;;AAsBAG,IAAAA,UAAU,GAAGc,KAAb,CAAoBC,KAAD,IAAS;AAC1BlB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,YAAY,CAACgB,KAAK,CAACC,OAAP,CAAZ;AACD,KAHD;AAID,GA3BQ,EA2BP,EA3BO,CAAT;;AA6BA,MAAGpB,SAAH,EAAa;AACX,wBACA;AAAS,MAAA,SAAS,EAAEJ,OAAO,CAACyB,WAA5B;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA;AAKD;;AACD,MAAGnB,SAAH,EAAa;AACX,wBAAO;AAAS,MAAA,SAAS,EAAEN,OAAO,CAAC0B,UAA5B;AAAA,6BACL;AAAA,kBAAIpB;AAAJ;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD;;AACD,QAAMqB,SAAS,GAAGzB,KAAK,CAAC0B,GAAN,CAAWC,IAAD,iBAC1B,QAAC,QAAD;AAEE,IAAA,EAAE,EAAEA,IAAI,CAACX,EAFX;AAGE,IAAA,IAAI,EAAEW,IAAI,CAACV,IAHb;AAIE,IAAA,WAAW,EAAEU,IAAI,CAACC,WAJpB;AAKE,IAAA,KAAK,EAAED,IAAI,CAACR;AALd,KACOQ,IAAI,CAACX,EADZ;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AAUA,sBACE;AAAS,IAAA,SAAS,EAAElB,OAAO,CAACE,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKyB;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA9DD;;GAAM1B,c;;KAAAA,c;AAgEN,eAAeA,cAAf","sourcesContent":["import {useEffect,useState} from 'react';\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\n\n\n\nconst AvailableMeals = () => {\n  const [meals,setmeals]=useState([]);\n  const [IsLoading,setIsLoading]=useState(true);\n  const [httpError,sethttpError]=useState();\n  useEffect(()=>{\n    const fetchMeals=async()=>{\n    const response=await fetch('https://http-firebase-15e34-default-rtdb.firebaseio.com/meals');\n\n    if(!response.ok)\n    {\n      throw new Error('Something went wrong!');\n    }\n    const responseData=await response.json()\n\n    const loadedMeals=[];\n    for(const key in responseData){\n      loadedMeals.push({\n        id:key,\n        name:responseData[key].name,\n        discription:responseData[key].discription,\n        price:responseData[key].price\n      })\n    }\n    setmeals(loadedMeals)\n    setIsLoading(false)\n    };\n    \n    fetchMeals().catch((error)=>{\n      setIsLoading(false);\n      sethttpError(error.message);\n    });\n  },[]);\n      \n  if(IsLoading){\n    return (\n    <section className={classes.MealLoading}>\n      <p>Loading...</p>\n    </section>\n    )\n  }\n  if(httpError){\n    return <section className={classes.MealsError}>\n      <p>{httpError}</p>\n    </section>\n  }\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}