{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASHISH KUMAR\\\\Documents\\\\React\\\\http-food\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isfiveChars = value => value.trim().length !== 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputValidity, setformInputValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalcode: true\n  });\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredname = nameInputRef.current.value;\n    const enteredstreet = streetInputRef.current.value;\n    const enteredpostal = streetInputRef.current.value;\n    const enteredcity = cityInputRef.current.value;\n    const enteredNameisvalid = !isEmpty(enteredname);\n    const enteredStreetisvalid = !isEmpty(enteredstreet);\n    const enteredpostalisvalid = isfiveChars(enteredpostal);\n    const enteredcityisvalid = !isEmpty(enteredcity);\n    setformInputValidity({\n      name: enteredNameisvalid,\n      street: enteredStreetisvalid,\n      city: enteredcityisvalid,\n      postalcode: enteredpostalisvalid\n    });\n    const formIsvalid = enteredNameisvalid && enteredStreetisvalid && enteredpostalisvalid && enteredcityisvalid;\n\n    if (!formIsvalid) {\n      return;\n    }\n  };\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n  const nameControlclasses = `${classes.control} ${formInputValidity.name ? \"\" : classes.invalid}`;\n  const streetControlclasses = `${classes.control} ${formInputValidity.street ? \"\" : classes.invalid}`;\n  const postalControlclasses = `${classes.control} ${formInputValidity.postalcode ? \"\" : classes.invalid}`;\n  const cityControlclasses = `${classes.control} ${formInputValidity.city ? \"\" : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlclasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), !formInputValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Name should not be left empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlclasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), !formInputValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Streetname should not be left empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalControlclasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), !formInputValidity.postalcode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please eneter a valid postal code.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), !formInputValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"City should not be left empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"ObeWfDo9l6NVRSkvtTujAMEui8s=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/Users/ASHISH KUMAR/Documents/React/http-food/src/components/Cart/Checkout.js"],"names":["useRef","useState","classes","isEmpty","value","trim","isfiveChars","length","Checkout","props","formInputValidity","setformInputValidity","name","street","city","postalcode","confirmHandler","event","preventDefault","enteredname","nameInputRef","current","enteredstreet","streetInputRef","enteredpostal","enteredcity","cityInputRef","enteredNameisvalid","enteredStreetisvalid","enteredpostalisvalid","enteredcityisvalid","formIsvalid","postalInputRef","nameControlclasses","control","invalid","streetControlclasses","postalControlclasses","cityControlclasses","form","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\r\nimport classes from \"./Checkout.module.css\";\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst isfiveChars = (value) => value.trim().length !== 5;\r\n\r\nconst Checkout = (props) => {\r\n  const [formInputValidity, setformInputValidity] = useState({\r\n    name: true,\r\n    street: true,\r\n    city: true,\r\n    postalcode: true,\r\n  });\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredname = nameInputRef.current.value;\r\n    const enteredstreet = streetInputRef.current.value;\r\n    const enteredpostal = streetInputRef.current.value;\r\n    const enteredcity = cityInputRef.current.value;\r\n\r\n    const enteredNameisvalid = !isEmpty(enteredname);\r\n    const enteredStreetisvalid = !isEmpty(enteredstreet);\r\n    const enteredpostalisvalid = isfiveChars(enteredpostal);\r\n    const enteredcityisvalid = !isEmpty(enteredcity);\r\n\r\n    setformInputValidity({\r\n      name: enteredNameisvalid,\r\n      street: enteredStreetisvalid,\r\n      city: enteredcityisvalid,\r\n      postalcode: enteredpostalisvalid,\r\n    });\r\n\r\n    const formIsvalid =\r\n      enteredNameisvalid &&\r\n      enteredStreetisvalid &&\r\n      enteredpostalisvalid &&\r\n      enteredcityisvalid;\r\n\r\n    if (!formIsvalid) {\r\n      return;\r\n    }\r\n  };\r\n  const nameInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const postalInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n\r\n  const nameControlclasses = `${classes.control} ${\r\n    formInputValidity.name ? \"\" : classes.invalid\r\n  }`;\r\n  const streetControlclasses = `${classes.control} ${\r\n    formInputValidity.street ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  const postalControlclasses = `${classes.control} ${\r\n    formInputValidity.postalcode ? \"\" : classes.invalid\r\n  }`;\r\n  const cityControlclasses = `${classes.control} ${\r\n    formInputValidity.city ? \"\" : classes.invalid\r\n  }`;\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlclasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\r\n        {!formInputValidity.name && <p>Name should not be left empty.</p>}\r\n      </div>\r\n      <div className={streetControlclasses}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\r\n        {!formInputValidity.street && (\r\n          <p>Streetname should not be left empty.</p>\r\n        )}\r\n      </div>\r\n      <div className={postalControlclasses}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input type=\"text\" id=\"postal\" ref={postalInputRef} />\r\n        {!formInputValidity.postalcode && (\r\n          <p>Please eneter a valid postal code.</p>\r\n        )}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\r\n        {!formInputValidity.city && <p>City should not be left empty.</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}